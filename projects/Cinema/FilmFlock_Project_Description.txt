# üé¨ FilmFlock - Movie Ticket Booking System

## Project Overview
FilmFlock is a comprehensive movie ticket booking system developed in Java using the Model-View-Controller (MVC) architecture. This desktop application provides a complete solution for cinema management, allowing customers to browse movies, select screenings, reserve seats, and process payments, while offering administrators full control over the cinema ecosystem.

## üéØ Key Features

### üéüÔ∏è Customer Interface
- **Welcome Screen**: Clean, intuitive entry point with login/signup options
- **Movie Browsing**: Browse available movies with detailed information including:
  - Movie posters and titles
  - Genre classification
  - Duration and age restrictions
  - Synopsis and descriptions
- **Screening Selection**: View available showtimes across different cinemas and halls
- **Seat Selection**: Interactive seat map with real-time availability
  - Visual color coding (Green: Available, Red: Occupied, Yellow: Selected)
  - Dynamic pricing calculation
- **Payment Processing**: Secure payment gateway supporting multiple payment methods
  - Credit card validation
  - Support for local payment methods (CIB, Eddahabiya)
  - Payment confirmation and e-ticket generation
- **Reservation Management**: View and manage personal bookings

### üõ†Ô∏è Administrator Interface
- **Secure Admin Login**: Authentication system for administrative access
- **Cinema Management**: Complete CRUD operations for cinema locations
  - Add/Edit/Delete cinema locations
  - Manage cinema capacity and hall information
  - Set operating hours
- **Movie Management**: Full movie catalog administration
  - Add new movies with complete metadata
  - Update movie information and availability
  - Remove outdated content
- **Screening Management**: Dynamic scheduling system
  - Create and modify movie screenings
  - Assign movies to specific halls and time slots
  - Real-time conflict detection
- **Reservation Monitoring**: Comprehensive booking oversight
  - View all reservations across the system
  - Track booking status and payment information
  - Generate reports and analytics

## üèóÔ∏è Technical Architecture

### Architecture Pattern
- **MVC (Model-View-Controller)**: Clean separation of concerns ensuring maintainable and scalable code

### Database Design
- **MySQL Integration**: Robust relational database with optimized schema
- **Connection Management**: Efficient database connection handling using JDBC
- **Data Models**: Well-structured entities including:
  - Movies (title, genre, duration, age limit, synopsis, poster)
  - Cinemas (name, address, capacity, operating hours)
  - Halls (number, capacity, cinema association)
  - Screenings (movie-hall-time associations)
  - Reservations (customer bookings with seat information)
  - Payments (secure transaction records)

### User Interface
- **Java Swing**: Custom-designed desktop interface with modern aesthetics
- **Custom Components**: 
  - Rounded buttons and text fields
  - Background panels with image support
  - Professional color schemes and typography
- **Responsive Design**: Optimized layouts for different screen interactions

## üõ†Ô∏è Technologies Used

### Core Technologies
- **Java SE**: Primary programming language
- **Java Swing**: GUI framework for desktop interface
- **MySQL**: Relational database management system
- **JDBC**: Database connectivity and operations

### Development Tools
- **Maven/Gradle**: Dependency management (mysql-connector-j-9.3.0.jar)
- **Git**: Version control and collaboration
- **IDE**: Development environment setup

## üìä Database Schema

### Key Tables
- **CINEMA**: Cinema information and locations
- **SALLE**: Hall details within cinemas
- **MOVIE**: Complete movie catalog
- **SCREENING**: Movie scheduling and timing
- **RESERVATION**: Customer booking records
- **PAYMENT**: Secure payment transaction data
- **CLIENT/ADMIN**: User authentication and management

## üé® User Experience Design

### Visual Design
- **Modern Interface**: Clean, professional aesthetic with custom graphics
- **Brand Identity**: Consistent FilmFlock branding throughout
- **Intuitive Navigation**: User-friendly flow from movie selection to payment
- **Visual Feedback**: Clear status indicators and confirmation messages

### Usability Features
- **Error Handling**: Comprehensive validation and error messaging
- **Input Validation**: Real-time form validation for all user inputs
- **Confirmation Systems**: Multi-step confirmation for critical actions
- **Accessibility**: Clear fonts and intuitive interface design

## üíº Business Logic

### Booking Process
1. **Movie Discovery**: Browse available movies with filtering options
2. **Screening Selection**: Choose preferred showtime and location
3. **Seat Selection**: Interactive seat map with real-time updates
4. **Payment Processing**: Secure transaction with multiple payment options
5. **Confirmation**: E-ticket generation and booking confirmation

### Administrative Workflows
1. **Content Management**: Add/update movies and screening schedules
2. **Capacity Management**: Monitor and adjust cinema capacity
3. **Revenue Tracking**: Oversee bookings and payment transactions
4. **System Maintenance**: Manage user accounts and system settings

## üîí Security Features
- **User Authentication**: Separate login systems for customers and administrators
- **Data Validation**: Input sanitization and validation throughout
- **Secure Payment**: Protected payment processing with card validation
- **Session Management**: Proper user session handling

## üöÄ Technical Achievements
- **Database Integration**: Seamless MySQL connectivity with optimized queries
- **Custom UI Components**: Hand-crafted Swing components for professional appearance
- **Error Handling**: Robust exception handling and user feedback systems
- **Modular Design**: Clean code architecture following OOP principles
- **Real-time Updates**: Dynamic data refresh for seat availability and bookings

## üìà Performance Optimizations
- **Connection Pooling**: Efficient database connection management
- **Lazy Loading**: Optimized data loading for better performance
- **Caching**: Strategic data caching for frequently accessed information
- **Query Optimization**: Efficient SQL queries with proper indexing

## üéì Learning Outcomes
This project demonstrates proficiency in:
- **Object-Oriented Programming**: Advanced Java concepts and design patterns
- **Database Design**: Relational database modeling and optimization
- **GUI Development**: Desktop application development with Java Swing
- **Software Architecture**: MVC pattern implementation and best practices
- **Problem Solving**: Complex business logic implementation
- **User Experience**: Interface design and usability considerations

## üîÆ Future Enhancements
- **Web Integration**: RESTful API development for web/mobile clients
- **Advanced Analytics**: Reporting and analytics dashboard
- **Mobile Application**: React Native or Flutter mobile companion
- **Email Integration**: Automated booking confirmations and notifications
- **Advanced Seat Maps**: 3D theater layouts and premium seating options

---

**Development Team**: Aymen Belkadi (Team Lead) and collaborators
**Development Period**: Academic project for Object-Oriented Programming course
**Project Status**: Fully functional desktop application with complete feature set

This project showcases a complete understanding of enterprise-level application development, from database design to user interface implementation, demonstrating readiness for professional software development roles.
